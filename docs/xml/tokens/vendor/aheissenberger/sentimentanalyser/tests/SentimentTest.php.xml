<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="../project/vendor/aheissenberger/sentimentanalyser/tests" file="SentimentTest.php" realpath="C:/xampp/htdocs/bac3/project/vendor/aheissenberger/sentimentanalyser/tests/SentimentTest.php" size="2497" time="2019-06-14T21:21:28+02:00" unixtime="1560540088" sha1="492ba0374be09fe51189c2e14b765a422ec5c1b0" relative="vendor/aheissenberger/sentimentanalyser/tests/SentimentTest.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php </token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT">*  Corresponding Class to test YourClass class</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT">*</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT">*  For each class in your library, there should be a corresponding Unit-Test for it</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT">*  Unit-Tests should be as much as possible independent from other test going on.</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT">*</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT">*  @author yourname</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT">*/</token>
  </line>
  <line no="11">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SentimentTest</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHPUnit_Framework_TestCase</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="12">
    <token name="T_WHITESPACE">	</token>
  </line>
  <line no="13">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">  * Just check if the YourClass has no syntax error </token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">  *</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">  * This is just a simple check to make sure your library has no syntax error. This helps you troubleshoot</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">  * any typo before you even use this library in a real project.</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT">  *</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">  */</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testIsThereAnySyntaxError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">aheissenberger</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sentimentanalyser</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sentiment</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertTrue</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_object</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="23">
    <token name="T_WHITESPACE">	</token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="25">
    <token name="T_WHITESPACE">  </token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">  * Just check if the YourClass has no syntax error </token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">  *</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">  * This is just a simple check to make sure your library has no syntax error. This helps you troubleshoot</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">  * any typo before you even use this library in a real project.</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">  *</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">  */</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testLongText</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">aheissenberger</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sentimentanalyser</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sentiment</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertEquals</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_DNUMBER">0.1779</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">analyse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Einen Schlagabtausch lieferten sich die weltoffene Richterin und der gelben Parteichef aber nicht. Hans nahm die Rolle des h&#xF6;flichen Gespr&#xE4;chspartners ein.Seine Tonalit&#xE4;t war 45 Minuten gem&#xE4;&#xDF;igt. "Doppelstaatsb&#xFC;rgerschaften finde ich emp&#xF6;rend", war schon der heftigste Sager des XXX-Chefs. So viel Gentleman-Attit&#xFC;de zeigte Hans noch nie.'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">	</token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="37">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">  * Just check if the YourClass has no syntax error </token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">  *</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">  * This is just a simple check to make sure your library has no syntax error. This helps you troubleshoot</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">  * any typo before you even use this library in a real project.</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">  *</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">  */</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testNegativHauptwort</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">aheissenberger</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sentimentanalyser</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sentiment</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertEquals</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_DNUMBER">0.9686</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">analyse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Schuld'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">  </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE">  </token>
  </line>
  <line no="50"/>
  <line no="51">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testNegativAbwandlung</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">aheissenberger</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sentimentanalyser</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sentiment</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertEquals</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_DNUMBER">0.0048</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">analyse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Schuftigerer'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">  </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="56"/>
  <line no="57">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testIstHauptwort</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">aheissenberger</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sentimentanalyser</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sentiment</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertEquals</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_DNUMBER">0.0048</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">analyse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'abnutzung'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">  </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="62"/>
  <line no="63">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">testKeinHauptwort</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">aheissenberger</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">sentimentanalyser</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sentiment</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">  </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">assertEquals</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_DNUMBER">0.3203</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">analyse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'&#xDC;bertrieben'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">  </token>
    <token name="T_UNSET">unset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
  </line>
  <line no="68"/>
  <line no="69">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
</source>
