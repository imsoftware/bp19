<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SimplePie_Item" namespace="" name="SimplePie_Item" abstract="false" final="false" start="55" end="2966">
  <file path="../project/vendor/simplepie/simplepie/library/SimplePie" file="Item.php" realpath="C:/xampp/htdocs/bac3/project/vendor/simplepie/simplepie/library/SimplePie/Item.php" size="99172" time="2019-06-14T21:21:47+02:00" unixtime="1560540107" sha1="c9ce991f5ebdb5451bd778fbe2e40affc7be6be8" relative="vendor/simplepie/simplepie/library/SimplePie/Item.php"/>
  <docblock>
    <description compact="Manages all item-related data">Used by <see xmlns="http://xml.phpdox.net/src" value="SimplePie::get_item()"/> and <see xmlns="http://xml.phpdox.net/src" value="SimplePie::get_items()"/>This class can be overloaded with <see xmlns="http://xml.phpdox.net/src" value="SimplePie::set_item_class()"/></description>
    <package value="SimplePie"/>
    <subpackage value="API"/>
  </docblock>
  <member name="feed" visibility="public" static="false" line="63">
    <docblock>
      <description compact="Parent feed"/>
      <access value="private"/>
      <var type="object">
        <type full="SimplePie" namespace="" name="SimplePie"/>
      </var>
    </docblock>
  </member>
  <member name="data" default="" type="array" visibility="public" static="false" line="71">
    <docblock>
      <description compact="Raw data"/>
      <access value="private"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="registry" visibility="protected" static="false" line="79">
    <docblock>
      <description compact="Registry object"/>
      <see value="set_registry"/>
      <var type="object">
        <type full="SimplePie_Registry" namespace="" name="SimplePie_Registry"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="90" end="94" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new item object">This is usually used by <see xmlns="http://xml.phpdox.net/src" value="SimplePie::get_items"/> and
<see xmlns="http://xml.phpdox.net/src" value="SimplePie::get_item"/>. Avoid creating this manually.
</description>
      <param description="Parent feed" type="object" variable="$feed">
        <type full="SimplePie" namespace="" name="SimplePie"/>
      </param>
      <param description="Raw data" type="array" variable="$data"/>
    </docblock>
    <parameter name="feed" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="set_registry" start="104" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the registry handler">This is usually used by <see xmlns="http://xml.phpdox.net/src" value="SimplePie_Registry::create"/></description>
      <since value="1.3"/>
      <param type="object" variable="$registry">
        <type full="SimplePie_Registry" namespace="" name="SimplePie_Registry"/>
      </param>
    </docblock>
    <parameter name="registry" byreference="false" type="object">
      <type full="SimplePie_Registry" namespace="" name="SimplePie_Registry"/>
    </parameter>
  </method>
  <method name="__toString" start="114" end="117" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a string representation of the item"/>
      <return type="string"/>
    </docblock>
  </method>
  <destructor name="__destruct" start="122" end="128" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remove items that link back to this before destroying this object"/>
    </docblock>
  </destructor>
  <method name="get_item_tags" start="144" end="152" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get data for an item-level element">This method allows you to get access to ANY element/attribute that is a
sub-element of the item/entry tag.
See <see xmlns="http://xml.phpdox.net/src" value="SimplePie::get_feed_tags()"/> for a description of the return value
</description>
      <since value="1.0"/>
      <see value="http://simplepie.org/wiki/faq/supported_xml_namespaces"/>
      <param description="The URL of the XML namespace of the elements you're trying to access" type="string" variable="$namespace"/>
      <param description="Tag name" type="string" variable="$tag"/>
      <return type="array"/>
    </docblock>
    <parameter name="namespace" byreference="false" type="{unknown}"/>
    <parameter name="tag" byreference="false" type="{unknown}"/>
  </method>
  <method name="get_base" start="162" end="165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the base URL value from the parent feed">Uses `&lt;xml:base&gt;`</description>
      <param type="array" variable="$element"/>
      <return type="string"/>
    </docblock>
    <parameter name="element" byreference="false" type="array" default=""/>
  </method>
  <method name="sanitize" start="177" end="180" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sanitize feed data"/>
      <access value="private"/>
      <see value="SimplePie::sanitize()"/>
      <param description="Data to sanitize" type="string" variable="$data"/>
      <param description="One of the SIMPLEPIE_CONSTRUCT_* constants" type="int" variable="$type"/>
      <param description="Base URL to resolve URLs against" type="string" variable="$base"/>
      <return description="Sanitized data" type="string"/>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <parameter name="base" byreference="false" type="string" default="''"/>
  </method>
  <method name="get_feed" start="191" end="194" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the parent feed">Note: this may not work as you think for multifeeds!</description>
      <link value="http://simplepie.org/faq/typical_multifeed_gotchas#missing_data_from_feed"/>
      <since value="1.0"/>
      <return type="object">
        <type full="SimplePie" namespace="" name="SimplePie"/>
      </return>
    </docblock>
  </method>
  <method name="get_id" start="210" end="250" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the unique identifier for the item">This is usually used when writing code to check for new items in a feed.

Uses `&lt;atom:id&gt;`, `&lt;guid&gt;`, `&lt;dc:identifier&gt;` or the `about` attribute
for RDF. If none of these are supplied (or `$hash` is true), creates an
MD5 hash based on the permalink, title and content.</description>
      <since value="Beta 2"/>
      <param description="Should we force using a hash instead of the supplied ID?" type="boolean" variable="$hash"/>
      <param description="User-supplied function to generate an hash" type="object" variable="$fn">
        <type full="string|false" namespace="" name="string|false"/>
      </param>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
    <parameter name="hash" byreference="false" type="boolean" default="false"/>
    <parameter name="fn" byreference="false" type="string" default="'md5'"/>
  </method>
  <method name="get_title" start="260" end="298" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the title of the item">Uses `&lt;atom:title&gt;`, `&lt;title&gt;` or `&lt;dc:title&gt;`</description>
      <since value="Beta 2 (previously called `get_item_title` since 0.8)"/>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
  </method>
  <method name="get_description" start="315" end="369" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the content for the item">Prefers summaries over full content , but will return full content if a
summary does not exist.
To prefer full content instead, use <see xmlns="http://xml.phpdox.net/src" value="get_content"/>Uses `&lt;atom:summary&gt;`, `&lt;description&gt;`, `&lt;dc:description&gt;` or
`&lt;itunes:subtitle&gt;`
</description>
      <since value="0.8"/>
      <param description="Should we avoid falling back to the content?" type="boolean" variable="$description_only"/>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
    <parameter name="description_only" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="get_content" start="385" end="408" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the content for the item">Prefers full content over summaries, but will return a summary if full
content does not exist.
To prefer summaries instead, use <see xmlns="http://xml.phpdox.net/src" value="get_description"/>Uses `&lt;atom:content&gt;` or `&lt;content:encoded&gt;` (RSS 1.0 Content Module)
</description>
      <since value="1.0"/>
      <param description="Should we avoid falling back to the description?" type="boolean" variable="$content_only"/>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
    <parameter name="content_only" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="get_thumbnail" start="418" end="432" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the media:thumbnail of the item">Uses `&lt;media:thumbnail&gt;`</description>
      <return type="object">
        <type full="array|null" namespace="" name="array|null"/>
      </return>
    </docblock>
  </method>
  <method name="get_category" start="441" end="450" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a category for the item"/>
      <since value="Beta 3 (previously called `get_categories()` since Beta 2)"/>
      <param description="The category that you want to return.  Remember that arrays begin with 0, not 1" type="int" variable="$key"/>
      <return type="object">
        <type full="SimplePie_Category|null" namespace="" name="SimplePie_Category|null"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="integer" default="0"/>
  </method>
  <method name="get_categories" start="460" end="516" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all categories for the item">Uses `&lt;atom:category&gt;`, `&lt;category&gt;` or `&lt;dc:subject&gt;`</description>
      <since value="Beta 3"/>
      <return description="List of {@see SimplePie_Category} objects" type="array" of="object">
        <type full="SimplePie_Category[]|nu" namespace="" name="SimplePie_Category[]|nu"/>
      </return>
    </docblock>
  </method>
  <method name="get_author" start="525" end="534" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get an author for the item"/>
      <since value="Beta 2"/>
      <param description="The author that you want to return.  Remember that arrays begin with 0, not 1" type="int" variable="$key"/>
      <return type="object">
        <type full="SimplePie_Author|null" namespace="" name="SimplePie_Author|null"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="integer" default="0"/>
  </method>
  <method name="get_contributor" start="543" end="552" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a contributor for the item"/>
      <since value="1.1"/>
      <param description="The contrbutor that you want to return.  Remember that arrays begin with 0, not 1" type="int" variable="$key"/>
      <return type="object">
        <type full="SimplePie_Author|null" namespace="" name="SimplePie_Author|null"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="integer" default="0"/>
  </method>
  <method name="get_contributors" start="562" end="616" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all contributors for the item">Uses `&lt;atom:contributor&gt;`</description>
      <since value="1.1"/>
      <return description="List of {@see SimplePie_Author} objects" type="array" of="object">
        <type full="SimplePie_Author[]|nu" namespace="" name="SimplePie_Author[]|nu"/>
      </return>
    </docblock>
  </method>
  <method name="get_authors" start="626" end="704" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all authors for the item">Uses `&lt;atom:author&gt;`, `&lt;author&gt;`, `&lt;dc:creator&gt;` or `&lt;itunes:author&gt;`</description>
      <since value="Beta 2"/>
      <return description="List of {@see SimplePie_Author} objects" type="array" of="object">
        <type full="SimplePie_Author[]|nu" namespace="" name="SimplePie_Author[]|nu"/>
      </return>
    </docblock>
  </method>
  <method name="get_copyright" start="714" end="730" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the copyright info for the item">Uses `&lt;atom:rights&gt;` or `&lt;dc:rights&gt;`</description>
      <since value="1.1"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="get_date" start="746" end="810" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the posting date/time for the item">Uses `&lt;atom:published&gt;`, `&lt;atom:updated&gt;`, `&lt;atom:issued&gt;`,
`&lt;atom:modified&gt;`, `&lt;pubDate&gt;` or `&lt;dc:date&gt;`

Note: obeys PHP's timezone setting. To get a UTC date/time, use
{@see get_gmdate}</description>
      <since value="Beta 2 (previously called `get_item_date` since 0.8)"/>
      <param description="Supports any PHP date format from {@see http://php.net/date} (empty for the raw data)" type="string" variable="$date_format"/>
      <return type="object">
        <type full="int|string|null" namespace="" name="int|string|null"/>
      </return>
    </docblock>
    <parameter name="date_format" byreference="false" type="string" default="'j F Y, g:i a'"/>
  </method>
  <method name="get_updated_date" start="823" end="859" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the update date/time for the item">Uses `&lt;atom:updated&gt;`

Note: obeys PHP's timezone setting. To get a UTC date/time, use
{@see get_gmdate}</description>
      <param description="Supports any PHP date format from {@see http://php.net/date} (empty for the raw data)" type="string" variable="$date_format"/>
      <return type="object">
        <type full="int|string|null" namespace="" name="int|string|null"/>
      </return>
    </docblock>
    <parameter name="date_format" byreference="false" type="string" default="'j F Y, g:i a'"/>
  </method>
  <method name="get_local_date" start="874" end="886" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the localized posting date/time for the item">Returns the date formatted in the localized language. To display in
languages other than the server's default, you need to change the locale
with <link xmlns="http://xml.phpdox.net/src" value="http://php.net/setlocale setlocale()"/>. The available
localizations depend on which ones are installed on your web server.
</description>
      <since value="1.0"/>
      <param description="Supports any PHP date format from {@see http://php.net/strftime} (empty for the raw data)" type="string" variable="$date_format"/>
      <return type="object">
        <type full="int|string|null" namespace="" name="int|string|null"/>
      </return>
    </docblock>
    <parameter name="date_format" byreference="false" type="string" default="'%c'"/>
  </method>
  <method name="get_gmdate" start="895" end="904" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the posting date/time for the item (UTC time)"/>
      <see value="get_date"/>
      <param description="Supports any PHP date format from {@see http://php.net/date}" type="string" variable="$date_format"/>
      <return type="object">
        <type full="int|string|null" namespace="" name="int|string|null"/>
      </return>
    </docblock>
    <parameter name="date_format" byreference="false" type="string" default="'j F Y, g:i a'"/>
  </method>
  <method name="get_updated_gmdate" start="913" end="922" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the update date/time for the item (UTC time)"/>
      <see value="get_updated_date"/>
      <param description="Supports any PHP date format from {@see http://php.net/date}" type="string" variable="$date_format"/>
      <return type="object">
        <type full="int|string|null" namespace="" name="int|string|null"/>
      </return>
    </docblock>
    <parameter name="date_format" byreference="false" type="string" default="'j F Y, g:i a'"/>
  </method>
  <method name="get_permalink" start="934" end="948" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the permalink for the item">Returns the first link available with a relationship of "alternate".
Identical to <see xmlns="http://xml.phpdox.net/src" value="get_link()"/> with key 0
</description>
      <see value="get_link"/>
      <since value="0.8"/>
      <return description="Permalink URL" type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
  </method>
  <method name="get_link" start="958" end="967" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a single link for the item"/>
      <since value="Beta 3"/>
      <param description="The link that you want to return.  Remember that arrays begin with 0, not 1" type="int" variable="$key"/>
      <param description="The relationship of the link to return" type="string" variable="$rel"/>
      <return description="Link URL" type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="integer" default="0"/>
    <parameter name="rel" byreference="false" type="string" default="'alternate'"/>
  </method>
  <method name="get_links" start="978" end="1048" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all links for the item">Uses `&lt;atom:link&gt;`, `&lt;link&gt;` or `&lt;guid&gt;`</description>
      <since value="Beta 2"/>
      <param description="The relationship of links to return" type="string" variable="$rel"/>
      <return description="Links found for the item (strings)" type="object">
        <type full="array|null" namespace="" name="array|null"/>
      </return>
    </docblock>
    <parameter name="rel" byreference="false" type="string" default="'alternate'"/>
  </method>
  <method name="get_enclosure" start="1060" end="1069" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get an enclosure from the item">Supports the &lt;enclosure&gt; RSS tag, as well as Media RSS and iTunes RSS.</description>
      <since value="Beta 2"/>
      <todo value="Add ability to prefer one type of content over another (in a media group)."/>
      <param description="The enclosure that you want to return.  Remember that arrays begin with 0, not 1" type="int" variable="$key"/>
      <return type="object">
        <type full="SimplePie_Enclosure|null" namespace="" name="SimplePie_Enclosure|null"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="integer" default="0"/>
    <parameter name="prefer" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="get_enclosures" start="1085" end="2893" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all available enclosures (podcasts, etc.)">Supports the &lt;enclosure&gt; RSS tag, as well as Media RSS and iTunes RSS.

At this point, we're pretty much assuming that all enclosures for an item
are the same content.  Anything else is too complicated to
properly support.</description>
      <since value="Beta 2"/>
      <todo value="Add support for end-user defined sorting of enclosures by type/handler (so we can prefer the faster-loading FLV over MP4)."/>
      <todo value="If an element exists at a level, but its value is empty, we should fall back to the value from the parent (if it exists)."/>
      <return description="List of SimplePie_Enclosure items" type="array" of="object">
        <type full="SimplePie_Enclosure[]|nu" namespace="" name="SimplePie_Enclosure[]|nu"/>
      </return>
    </docblock>
  </method>
  <method name="get_latitude" start="2907" end="2919" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the latitude coordinates for the item">Compatible with the W3C WGS84 Basic Geo and GeoRSS specifications

Uses `&lt;geo:lat&gt;` or `&lt;georss:point&gt;`</description>
      <since value="1.0"/>
      <link value="http://www.w3.org/2003/01/geo/ W3C WGS84 Basic Geo"/>
      <link value="http://www.georss.org/ GeoRSS"/>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
  </method>
  <method name="get_longitude" start="2933" end="2949" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the longitude coordinates for the item">Compatible with the W3C WGS84 Basic Geo and GeoRSS specifications

Uses `&lt;geo:long&gt;`, `&lt;geo:lon&gt;` or `&lt;georss:point&gt;`</description>
      <since value="1.0"/>
      <link value="http://www.w3.org/2003/01/geo/ W3C WGS84 Basic Geo"/>
      <link value="http://www.georss.org/ GeoRSS"/>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
  </method>
  <method name="get_source" start="2957" end="2965" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the `&lt;atom:source&gt;` for the item"/>
      <since value="1.1"/>
      <return type="object">
        <type full="SimplePie_Source|null" namespace="" name="SimplePie_Source|null"/>
      </return>
    </docblock>
  </method>
</class>
